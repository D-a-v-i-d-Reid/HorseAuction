// <auto-generated />
using System;
using HorseAuction;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorseAuction.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    [Migration("20240123082950_RemoveSellerUser")]
    partial class RemoveSellerUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("HorseAuction.Bid", b =>
                {
                    b.Property<Guid>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BidTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("BuyerUserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HorseId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegisteredName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerUserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("BidId");

                    b.HasIndex("HorseId");

                    b.HasIndex("UserId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("HorseAuction.Horse", b =>
                {
                    b.Property<Guid>("HorseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformanceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RegisteredName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerUserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("HorseId");

                    b.HasIndex("UserId");

                    b.ToTable("Horses");
                });

            modelBuilder.Entity("HorseAuction.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HorseAuction.Bid", b =>
                {
                    b.HasOne("HorseAuction.Horse", "Horse")
                        .WithMany("Bids")
                        .HasForeignKey("HorseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HorseAuction.User", "Buyer")
                        .WithMany("Bids")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("Horse");
                });

            modelBuilder.Entity("HorseAuction.Horse", b =>
                {
                    b.HasOne("HorseAuction.User", "User")
                        .WithMany("Horses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HorseAuction.Horse", b =>
                {
                    b.Navigation("Bids");
                });

            modelBuilder.Entity("HorseAuction.User", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Horses");
                });
#pragma warning restore 612, 618
        }
    }
}
